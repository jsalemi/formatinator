% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{func_dx_scan_yn}
\alias{func_dx_scan_yn}
\title{Create Binary Indicators of Diagnostic Conditions Based on Diagnosis Code Variables}
\usage{
func_dx_scan_yn(df, codes)
}
\arguments{
\item{df}{The data frame which contains the diagnosis code variables.}

\item{codes}{A regular expression (pattern) reflecting the codes of interest.}
}
\value{
A numeric value of 0 or 1.
}
\description{
This function will scan diagnosis code variables in a data frame for specific codes
the user specifies and will create an indicator variable indicating presence (1)
or absence (0) of at least one of the desired codes reflected in a code pattern.
}
\examples{
# Original data
df <- tibble::tibble(
  id  = c(1, 2, 3),
  dx1 = c("X34.5", "X35.6", "X36.7"),
  dx2 = c("G33.1", "G34.3", "G35.4"),
  dx3 = c("F25.4", "F26.7", "F27.8"),
  dx4 = c(NA,      "H44.8", "H45.9"),
  dx5 = c(NA,      NA,      "I56.0")
)
df
# Create three new variables for each observation
# flag_any_g_code should be 1 if any diagnoses begin with "G"
# flag_g33_code should be 1 if any diagnoses begin with "G33"
# flag_code_ends_even should be 1 if any diagnoses end in an even number
df <- df |>
  dplyr::mutate(
    flag_any_g_code     = func_dx_scan_yn(df |> dplyr::select(dx1:dx5), "^G"),
    flag_g33_code       = func_dx_scan_yn(df |> dplyr::select(dx1:dx5), "^G33"),
    flag_code_ends_even = func_dx_scan_yn(df |> dplyr::select(dx1:dx5), "[02468]$")
  )
df
}
